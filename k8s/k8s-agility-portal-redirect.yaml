kind: Service
apiVersion: v1
metadata:
  name: agility-portal-redirect
spec:
  selector:
    app: agility-portal-redirect
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer
# apiVersion: v1
# kind: Service
# metadata:
#   name: agility-portal-redirect
#   labels:
#     app: agility-portal-redirect
# spec:
#   type: NodePort
#   ports:
#     - port: 3000
#       name: agility-portal-redirect
#   selector:
#     app: agility-portal-redirect
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agility-portal-redirect
  labels:
    app: agility-portal-redirect
spec:
  replicas: 4
  selector:
    matchLabels:
      app: agility-portal-redirect
  template:
    metadata:
      labels:
        app: agility-portal-redirect
    spec:
      containers:
      - name: agility-portal-redirect
        #image: codygreen/agility-portal-redirect:4b1eb3d-dirty-52d1d7a
        image: codygreen/agility-portal-redirect
        env:
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: agility-portal-redirect
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: agility-portal-redirect
                key: password
          - name: DOMAIN
            valueFrom:
              secretKeyRef:
                name: agility-portal-redirect
                key: domain
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: agility-portal-redirect
                key: redisPassword
          - name: NODE_ENV
            value: production
        ports:
        - containerPort: 3000